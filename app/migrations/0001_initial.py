# Generated by Django 4.2.4 on 2023-09-17 18:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, verbose_name='Código da Ação')),
                ('designacao', models.CharField(max_length=100, verbose_name='Designação da Ação')),
                ('modalidade', models.CharField(choices=[('CS', 'Curso'), ('OF', 'Oficina'), ('ACD', 'Ação de Curta Duração'), ('CE', 'Circulo de Estudos')], max_length=3, verbose_name='Modalidade')),
                ('horas', models.IntegerField(null=True, verbose_name='Número de horas da ação')),
                ('caducidade', models.DateField()),
                ('registo', models.CharField(max_length=40, verbose_name='Número de Registo')),
                ('acao_images', models.ImageField(upload_to='images')),
                ('acao_doc', models.URLField(default='http://cfaematosinhos.eu', verbose_name='Descritivo da ação')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turma', models.CharField(blank=True, max_length=15, null=True, verbose_name='Turma')),
                ('datainicio', models.DateField()),
                ('datafim', models.DateField()),
                ('regime', models.CharField(choices=[('O', 'Online'), ('P', 'Presencial'), ('H', 'Híbrido')], max_length=4, null=True, verbose_name='Regime de frequência')),
                ('publicoalvo', models.CharField(default='Professores do ensino básico e secundário', max_length=40, null=True, verbose_name='publico alvo')),
                ('datainicioinsc', models.DateField(default='2023-01-01', verbose_name='datainicioinscricao')),
                ('datalimiteinsc', models.DateField(default='2023-01-01', verbose_name='datalimteinscricao')),
                ('fechada', models.BooleanField(default=False, verbose_name='Fechada')),
                ('codigoacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.acao')),
            ],
        ),
        migrations.CreateModel(
            name='Sessoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessao', models.IntegerField()),
                ('data', models.DateField()),
                ('hora', models.TimeField()),
                ('duracao', models.FloatField()),
                ('localformacao', models.CharField(blank=True, default='local a definir', max_length=50, null=True, verbose_name='localformacao')),
                ('sumario', models.TextField()),
                ('codturma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.turma')),
                ('faltas', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=20, verbose_name='Tipo de utilizador')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('nascimento', models.DateField(verbose_name='data de nascimento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=10, verbose_name='Género')),
                ('nacionalidade', models.CharField(default='Portuguesa', max_length=30, verbose_name='Nacionalidade')),
                ('identificacao', models.CharField(choices=[('CC', 'Cartão de Cidadão'), ('PP', 'Passaporte'), ('CR', 'Certificado de Residência')], max_length=2, verbose_name='Documento de identificação')),
                ('numeroid', models.CharField(max_length=20, verbose_name='Número do Cartão')),
                ('validadeid', models.DateField(verbose_name='Data de Validade')),
                ('nif', models.CharField(max_length=10, verbose_name='NIF')),
                ('niss', models.CharField(max_length=10, verbose_name='NISS')),
                ('habilitacoes', models.CharField(choices=[('DR', 'Doutoramento'), ('MR', 'Mestrado'), ('LC', 'Licenciatura')], max_length=25, verbose_name='Habilitações Literárias')),
                ('endereco', models.CharField(max_length=60, verbose_name='Endereço')),
                ('codigopostal', models.CharField(max_length=8, verbose_name='Código Postal')),
                ('localidade', models.CharField(max_length=30, verbose_name='Localidade')),
                ('telemovel', models.CharField(max_length=12, verbose_name='Telemóvel')),
                ('telefone', models.CharField(max_length=12, verbose_name='Telefone')),
                ('datainiciofuncoes', models.DateField(null=True, verbose_name='Data início de funções')),
                ('grupo', models.CharField(choices=[('100', 'Educação Pré-Escolar'), ('110', '1º Ciclo'), ('120', 'Inglês'), ('550', 'Informática')], max_length=3, null=True, verbose_name='Grupo Disciplinar')),
                ('escalao', models.CharField(choices=[('1º', '1º Escalão'), ('2º', '2º Escalão'), ('3º', '3º Escalão'), ('4º', '4º Escalão'), ('5º', '5º Escalão'), ('6º', '6º Escalão'), ('7º', '7º Escalão'), ('8º', '8º Escalão'), ('9º', '9º Escalão'), ('10º', '10º Escalão')], max_length=3, null=True, verbose_name='Escalão')),
                ('proximaprogressao', models.DateField(null=True, verbose_name='Data da próxima progressão')),
                ('indice', models.CharField(choices=[('120º', '120'), ('130', '130'), ('240', '240'), ('500', '500')], max_length=4, null=True, verbose_name='Indice')),
                ('nivel', models.CharField(choices=[('PE', 'Pré- Escolar'), ('1C', '1º ciclo'), ('2C', '2º ciclo'), ('3C', '3º ciclo'), ('SC', 'Secundário'), ('EE', 'Educação Especial')], default='SC', max_length=4, verbose_name='nivel de ensino')),
                ('vinculo', models.CharField(choices=[('QE', 'Quadro de Escola'), ('QZP', 'Quadro de zona'), ('CNT', 'Contratado')], default='QE', max_length=4, verbose_name='nivel de ensino')),
                ('agrupamento', models.CharField(choices=[('AEAS', 'Agrupamento de Escolas Abel Salazar'), ('AEPOL', 'Agrupamento de Escolas Prof. Óscar Lopes'), ('ESAG', 'Escola Secundária Auguto Gomes'), ('ZARCO', 'Escola Secundária João Gonçalves Zarco'), ('ESBN', 'Escola secundária da Boa Nova')], default='ZARCO', max_length=5, verbose_name='nivel de ensino')),
                ('formador', models.BooleanField(default=False, verbose_name='formador')),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inscritos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datahorainscricao', models.DateTimeField()),
                ('confirmado', models.BooleanField(default=False, verbose_name='Confirma frequência')),
                ('concluiu', models.BooleanField(default=False, verbose_name='concluiu a ação')),
                ('classificacao', models.FloatField(default=0, verbose_name='Classificação')),
                ('formador', models.BooleanField(default=False, verbose_name='formador')),
                ('idturma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.turma')),
                ('idutilizador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('idturma', 'idutilizador')},
            },
        ),
    ]
